# Simple workflow for deploying static content to GitHub Pages
name: GHPages Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo from branch '${{github.ref_name}}'
        uses: actions/checkout@main
      - name: Generate thumbsup static galleries
        run: |
          ## ${env:GITHUB_WORKSPACE} should be the current working directory after the 'checkout' Action runs (and is the root of the checked-out repo); src/ subfolder will become the working directory for the container command
          Write-Output thumbsup_config-records.json thumbsup_config-stash.json | ForEach-Object {docker run --tty --volume "${env:GITHUB_WORKSPACE}:/work" --workdir /work/src ghcr.io/thumbsup/thumbsup thumbsup --config $_}
      # - name: Create index page for gallery 'sites' / sections
      #   run: |
      #     ## create an index for the gallery subfolders, so /gallery/ returns something useful
      - name: Cleanup some thumbsup files
        run: |
          Add-Content -Path ${env:GITHUB_STEP_SUMMARY} -Value '# ðŸ§¾ Log output from `thumbsup` runs', 'The deets from the `thumbsup` log file:', '```', (Get-Content -Raw ./siteContents/records/thumbsup.log), '```'
          ## some files useful to thumbsup if this gallery output was persistent, but not since this is ephemeral (artifact gets uploaded, runner gets killed); so, clean 'em up
          sudo rm --verbose ./siteContents/records/thumbsup.db ./siteContents/records/thumbsup.log
      - name: Setup Pages
        uses: actions/configure-pages@main
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@main
        with:
          ## path to upload
          path: './siteContents'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main